@model TFCLPortal.Applications.DashboardDataDto
@{
    ViewData["Title"] = "Dashboard";
    Layout = "~/Views/Shared/_NewLayout.cshtml";
}

@*<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>*@

<link href="/fonts/material-icons/materialicons.css" rel="stylesheet" />
@*<link href="/css/DashboardStyle.css" rel="stylesheet">*@

<style>
    .centeredDiv {
        position: absolute;
        top: 50%;
        left: 50%;
        -moz-transform: translateX(-50%) translateY(-50%);
        -webkit-transform: translateX(-50%) translateY(-50%);
        transform: translateX(-50%) translateY(-50%);
    }

    .info-box {
        box-shadow: 0 2px 10px rgb(0 0 0 / 20%);
        height: 80px;
        display: flex;
        cursor: default;
        background-color: #fff;
        position: relative;
        overflow: hidden;
        margin-bottom: 30px;
    }

    .bg-green {
        background-color: #4CAF50 !important;
        color: #fff;
    }

    .info-box .icon {
        display: inline-block;
        text-align: center;
        background-color: rgba(0, 0, 0, 0.12);
        width: 80px;
    }

    .info-box .content {
        display: inline-block;
        padding: 7px 10px;
    }

    .info-box .icon i {
        color: #fff;
        font-size: 50px;
        line-height: 80px;
    }

    .info-box .content .text {
        font-size: 11px;
        margin-top: 11px;
        color: #555;
    }

    .info-box .content .number {
        font-weight: normal;
        font-size: 26px;
        margin-top: -4px;
        color: #555;
    }

    .content .text, .bg-pink .content .number {
        color: #fff !important;
        text-transform: uppercase;
    }

    .content .number {
        color: #fff !important;
    }

    .bg-pink {
        background-color: #E91E63 !important;
        color: #fff;
    }

    .bg-cyan {
        background-color: #00BCD4 !important;
        color: #fff;
    }

    .bg-light-green {
        background-color: #8BC34A !important;
        color: #fff;
    }

    .bg-orange {
        background-color: #FF9800 !important;
        color: #fff;
    }

    .info-box.hover-expand-effect:hover:after {
        width: 100%;
    }

    .info-box.hover-expand-effect:after {
        background-color: rgba(0, 0, 0, 0.05);
        content: ".";
        position: absolute;
        left: 80px;
        top: 0;
        width: 0;
        height: 100%;
        color: transparent;
        -moz-transition: all 0.95s;
        -o-transition: all 0.95s;
        -webkit-transition: all 0.95s;
        transition: all 0.95s;
    }

    .d-none {
        display: none
    }

    #refreshTag {
        cursor: pointer;
        color: #4CAF50 !important;
    }

    .info-box {
        cursor: pointer;
    }

    #lastUpdateRow {
        font-weight: bold
    }

    .card {
        background: #fff;
        min-height: 50px;
        box-shadow: 0 2px 10px rgb(0 0 0 / 20%);
        position: relative;
        margin-bottom: 30px;
    }

        .card .body {
            font-size: 14px;
            color: #555;
            padding: 20px;
        }

        .card .bg-red, .card .bg-pink, .card .bg-purple, .card .bg-deep-purple, .card .bg-indigo, .card .bg-blue, .card .bg-light-blue, .card .bg-cyan, .card .bg-teal, .card .bg-green, .card .bg-light-green, .card .bg-lime, .card .bg-yellow, .card .bg-amber, .card .bg-orange, .card .bg-deep-orange, .card .bg-brown, .card .bg-grey, .card .bg-blue-grey, .card .bg-black {
            border-bottom: none !important;
            color: #fff !important;
        }

    .dashboard-stat-list {
        list-style: none;
        padding-left: 0;
        margin-top: 40px;
    }

    .bg-teal {
        background-color: #009688 !important;
        color: #fff;
    }

    .dashboard-stat-list li {
        padding: 16px 0 0 0;
    }

    .m-b--35 {
        margin-bottom: -35px;
    }

    .titleCard {
        display: inline-block;
        text-align: center;
        background-color: rgba(0, 0, 0, 0.12);
        height: 80px;
        text-transform: uppercase;
    }
</style>
<main class='main-content bgc-grey-100' id="widget" style="padding-top:70px">

    <div class="row clearfix">

        <div class="col-lg-9 col-md-9 col-sm-9 col-xs-12">
            <div class="row">
                <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                    <a href="~/Mobilization/Mobilizations">
                        <div class="info-box bg-cyan hover-expand-effect">
                            <div class="icon ">
                                <i class="material-icons">verified_user</i>
                            </div>
                            <div class="content">
                                <div class="text">Mobilization</div>
                                <div class="number count-to" data-from="0" data-to="125" data-speed="1000" data-fresh-interval="20">@(string.Format("{0:#,##0}", Model.MobilizationCount))</div>
                            </div>
                        </div>
                    </a>
                </div>
                <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                    <a href="~/Application/Applications">
                        <div class="info-box bg-cyan hover-expand-effect">
                            <div class="icon">
                                <i class="material-icons">content_paste</i>
                            </div>
                            <div class="content">
                                <div class="text">Total Applications</div>
                                <div class="number count-to" data-from="0" data-to="125" data-speed="1000" data-fresh-interval="20">
                                    @(string.Format("{0:#,##0}", Model.TotalfileCount))
                                </div>
                            </div>
                        </div>
                    </a>
                </div>
                <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                    <div class="info-box bg-cyan hover-expand-effect">
                        <div class="icon">
                            <i class="material-icons">date_range</i>
                        </div>
                        <div class="content">
                            <div class="text"><div class="number count-to" id="demo" style="font-size:11px"></div></div>

                            <div class="number count-to" id="timeDiv" data-from="0" data-to="125" data-speed="1000" data-fresh-interval="20"></div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                    <a href="~/Application/Applications?screen=Created">
                        <div class="info-box bg-green hover-expand-effect">
                            <div class="icon">
                                <i class="material-icons">playlist_add_check</i>
                            </div>
                            <div class="content">
                                <div class="text">CREATED </div>
                                <div class="number count-to" data-from="0" data-to="125" data-speed="1000" data-fresh-interval="20">@(string.Format("{0:#,##0}", Model.CreatedfileCount))</div>
                            </div>
                        </div>
                    </a>
                </div>
                <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                    <a href="~/Application/Applications?screen=In Process">
                        <div class="info-box bg-green hover-expand-effect">
                            <div class="icon">
                                <i class="material-icons">playlist_add_check</i>
                            </div>
                            <div class="content">
                                <div class="text">IN-PROCESS </div>
                                <div class="number count-to" data-from="0" data-to="125" data-speed="1000" data-fresh-interval="20">@(string.Format("{0:#,##0}", Model.InprocessfileCount))</div>
                            </div>
                        </div>
                    </a>
                </div>
                <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                    <a href="~/Application/Applications?screen=Submitted">
                        <div class="info-box bg-green hover-expand-effect">
                            <div class="icon">
                                <i class="material-icons">playlist_add_check</i>
                            </div>
                            <div class="content">
                                <div class="text">SUBMITTED </div>
                                <div class="number count-to" data-from="0" data-to="125" data-speed="1000" data-fresh-interval="20">@(string.Format("{0:#,##0}", Model.SubmittedfileCount))</div>
                            </div>
                        </div>
                    </a>
                </div>
                <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                    <a href="~/Application/Applications?screen=Decline">
                        <div class="info-box bg-green hover-expand-effect">
                            <div class="icon">
                                <i class="material-icons">playlist_add_check</i>
                            </div>
                            <div class="content">
                                <div class="text">Declined </div>
                                <div class="number count-to" data-from="0" data-to="125" data-speed="1000" data-fresh-interval="20">@(string.Format("{0:#,##0}", Model.DeclinefileCount))</div>
                            </div>
                        </div>
                    </a>
                </div>

                <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                    <a href="~/Application/Applications?screen=Screened">
                        <div class="info-box bg-green hover-expand-effect">
                            <div class="icon">
                                <i class="material-icons">playlist_add_check</i>
                            </div>
                            <div class="content">
                                <div class="text">SCREENED </div>
                                <div class="number count-to" data-from="0" data-to="125" data-speed="1000" data-fresh-interval="20">@(string.Format("{0:#,##0}", Model.ScreenedfileCount))</div>
                            </div>
                        </div>
                    </a>
                </div>
                <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                    <a href="~/Application/Applications?screen=Discrepent">
                        <div class="info-box bg-green hover-expand-effect">
                            <div class="icon">
                                <i class="material-icons">playlist_add_check</i>
                            </div>
                            <div class="content">
                                <div class="text">Discrepented </div>
                                <div class="number count-to" data-from="0" data-to="125" data-speed="1000" data-fresh-interval="20">@(string.Format("{0:#,##0}", Model.DiscrepentedfileCount))</div>
                            </div>
                        </div>
                    </a>
                </div>
                <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                    <a href="~/Application/Applications?screen=BCC Review">
                        <div class="info-box bg-green hover-expand-effect">
                            <div class="icon">
                                <i class="material-icons">playlist_add_check</i>
                            </div>
                            <div class="content">
                                <div class="text">Under BCC Review</div>
                                <div class="number count-to" data-from="0" data-to="125" data-speed="1000" data-fresh-interval="20">@(string.Format("{0:#,##0}", Model.UnderBccReviewfileCount))</div>
                            </div>
                        </div>
                    </a>
                </div>
                <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                    <a href="~/Application/Applications?screen=BCC Reviewed">
                        <div class="info-box bg-green hover-expand-effect">
                            <div class="icon">
                                <i class="material-icons">playlist_add_check</i>
                            </div>
                            <div class="content">
                                <div class="text">BCC Reviewed</div>
                                <div class="number count-to" data-from="0" data-to="125" data-speed="1000" data-fresh-interval="20">@(string.Format("{0:#,##0}", Model.BccReviewedfileCount))</div>
                            </div>
                        </div>
                    </a>
                </div>

                <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                    <a href="~/Application/Applications?screen=MCRC Review">
                        <div class="info-box bg-green hover-expand-effect">
                            <div class="icon">
                                <i class="material-icons">playlist_add_check</i>
                            </div>
                            <div class="content">
                                <div class="text">Under MCRC Review</div>
                                <div class="number count-to" data-from="0" data-to="125" data-speed="1000" data-fresh-interval="20">@(string.Format("{0:#,##0}", Model.UnderMCRCreviewCount))</div>
                            </div>
                        </div>
                    </a>
                </div>

                <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                    <a href="~/Application/Applications?screen=MCRC Created">
                        <div class="info-box bg-green hover-expand-effect">
                            <div class="icon">
                                <i class="material-icons">playlist_add_check</i>
                            </div>
                            <div class="content">
                                <div class="text">MCRC Created </div>
                                <div class="number count-to" data-from="0" data-to="125" data-speed="1000" data-fresh-interval="20">@(string.Format("{0:#,##0}", Model.UnderMcrcReviewfileCount))</div>
                            </div>
                        </div>
                    </a>
                </div>


                <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                    <a href="~/Application/Applications?screen=MCRC Reviewed">
                        <div class="info-box bg-green hover-expand-effect">
                            <div class="icon">
                                <i class="material-icons">playlist_add_check</i>
                            </div>
                            <div class="content">
                                <div class="text">MCRC Reviewed </div>
                                <div class="number count-to" data-from="0" data-to="125" data-speed="1000" data-fresh-interval="20">@(string.Format("{0:#,##0}", Model.McrcReviewedfileCount))</div>
                            </div>
                        </div>
                    </a>
                </div>
                <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                    <a href="~/Application/Applications?screen=BCC Approved">
                        <div class="info-box bg-green hover-expand-effect">
                            <div class="icon">
                                <i class="material-icons">playlist_add_check</i>
                            </div>
                            <div class="content">
                                <div class="text">BCC Approved</div>
                                <div class="number count-to" data-from="0" data-to="125" data-speed="1000" data-fresh-interval="20">@(string.Format("{0:#,##0}", Model.BCCapprovedfileCoun))</div>
                            </div>
                        </div>
                    </a>
                </div>
                <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                    <a href="~/Application/Applications?screen=MC Authorized">
                        <div class="info-box bg-green hover-expand-effect">
                            <div class="icon">
                                <i class="material-icons">playlist_add_check</i>
                            </div>
                            <div class="content">
                                <div class="text">Management Approved</div>
                                <div class="number count-to" data-from="0" data-to="125" data-speed="1000" data-fresh-interval="20">@(string.Format("{0:#,##0}", Model.ManagementApprovedCount))</div>
                            </div>
                        </div>
                    </a>
                </div>
                <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                    <a href="~/Application/Applications?screen=Disbursed">
                        <div class="info-box bg-green hover-expand-effect">
                            <div class="icon">
                                <i class="material-icons">playlist_add_check</i>
                            </div>
                            <div class="content">
                                <div class="text">Disbursed</div>
                                <div class="number count-to" data-from="0" data-to="125" data-speed="1000" data-fresh-interval="20">@(string.Format("{0:#,##0}", Model.DisbursedfileCount))</div>
                            </div>
                        </div>
                    </a>
                </div>
                <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                    <a href="~/Application/Applications?screen=Disbursed">
                        <div class="info-box bg-cyan hover-expand-effect">
                            <div class="icon">
                                <i class="material-icons">redeem</i>
                            </div>
                            <div class="content">
                                <div class="text">Disbursed Amount</div>
                                <div class="number count-to" data-from="0" data-to="125" data-speed="1000" data-fresh-interval="20">@(string.Format("{0:#,##0.##}", (Model.LendingAmountCount)))</div>
                            </div>
                        </div>
                    </a>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <div class="card bg-cyan" style="height:630px;">
                        <h5 class="font-bold m-b--35 text-center titleCard pt-4">Today's Updates</h5>
                        <div class="body text-white text-uppercase">
                            <ul class="dashboard-stat-list">
                                @if (Model.TodayMobilizations != 0)
                                {
                                    <li> @Model.TodayMobilizations new Mobilizations <span class="pull-right"><i class="fa fa-clipboard"></i></span></li>
                                }
                                @if (Model.TodayApplications != 0)
                                {
                                    <li> @Model.TodayApplications new Customer Acquired <span class="pull-right"><i class="fa fa-user-plus"></i></span></li>
                                }
                                @if (Model.TodayMeetingWithClients != 0)
                                {
                                    <li> @Model.TodayMeetingWithClients meetings with clients <span class="pull-right"><i class="fa fa-calendar"></i></span></li>
                                }
                                @if (Model.TodayMobilizations == 0 && Model.TodayApplications == 0 && Model.TodayMeetingWithClients == 0)
                                {
                                    <li> No Updates Found... </li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div id="lastUpdateRow" class="row d-none">
        <div class="col-lg-12 col-md-12 text-right">
            <p>Last Update at <span id="lastUpdate"></span>. <a id="refreshTag" onclick="window.location.reload();">Click here <i class="fa fa-refresh"></i> to get updated view.</a></p>
        </div>
    </div>

    <script>
        var d = new Date().toDateString()
        document.getElementById("demo").innerHTML = d

        startTime();
        var UpdateTime = null;
        function startTime() {
            var today = new Date();
            var h = today.getHours();
            var m = today.getMinutes();
            var s = today.getSeconds();
            m = checkTime(m);
            s = checkTime(s);

            if (UpdateTime == null) {
                UpdateTime = h + ":" + m + ":" + s;
                document.getElementById("lastUpdate").innerHTML = UpdateTime;
            }

            document.getElementById('timeDiv').innerHTML =
                h + ":" + m + ":" + s;
            var t = setTimeout(startTime, 500);
        }
        function checkTime(i) {
            if (i < 10) { i = "0" + i };  // add zero in front of numbers < 10
            return i;
        }


    </script>

    <!-- The core Firebase JS SDK is always required and must be listed first -->
    <script src="https://www.gstatic.com/firebasejs/8.2.3/firebase-app.js"></script>
    <script src="~/lib/jquery/dist/jquery.js" asp-append-version="true"></script>

    <!-- TODO: Add SDKs for Firebase products that you want to use
     https://firebase.google.com/docs/web/setup#available-libraries -->
    <script src="https://www.gstatic.com/firebasejs/8.2.3/firebase-analytics.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.2.3/firebase-messaging.js"></script>
    @*<script src="https://www.gstatic.com/firebasejs/8.2.3/firebase.js"></script>*@

    <script>

        var userid = '@ViewBag.userid';
        // Your web app's Firebase configuration
        // For Firebase JS SDK v7.20.0 and later, measurementId is optional
    var firebaseConfig = {
        apiKey: "AIzaSyD2Zj5Z8zQF_BFUMqY5bw3mHVp8fLoaDzA",
        authDomain: "taleem-tech-tfcl.firebaseapp.com",
        projectId: "taleem-tech-tfcl",
        storageBucket: "taleem-tech-tfcl.appspot.com",
        messagingSenderId: "858603187767",
        appId: "1:858603187767:web:4b29dff65098b6093a59b2",
        measurementId: "G-TYGH4ZW5JV"
    };
    // Initialize Firebase
    firebase.initializeApp(firebaseConfig);
    firebase.analytics();

        // Retrieve Firebase Messaging object.
        const messaging = firebase.messaging();
        messaging.requestPermission()
            .then(function () {
                console.log('Notification permission granted.');
                // TODO(developer): Retrieve an Instance ID token for use with FCM.

                    getRegToken();


            })
            .catch(function (err) {
                console.log('Unable to get permission to notify.', err);
            });

        function getRegToken(argument) {
            messaging.getToken()
                .then(function (currentToken) {
                    if (currentToken) {
                        saveToken(currentToken);
                    } else {
                        console.log('No Instance ID token available. Request permission to generate one.');
                    }
                })
                .catch(function (err) {
                    console.log('An error occurred while retrieving token. ', err);
                });
        }



        function saveToken(currentToken) {
            //alert(currentToken);
             $.ajax({
            type: 'POST',
            datatype: "json",
            contenttype: 'application/json; charset=utf-8',
            url: '@Url.Content("~/Dashboard/CreateFCMtoken")',
            data: {
                'fK_UserId': userid,
                'token': currentToken
            } ,
            success: function (data) {
            },
            error: function (data) {
                console.log(data);
            }
       });
        }

        messaging.onMessage(function (payload) {
            console.log("Message received. ", payload);
            notificationTitle = payload.data.title;
            notificationOptions = {
                body: payload.data.body,
                icon: payload.data.icon,
                image: '/Theame/images/bg.png'
            };
            var notification = new Notification(notificationTitle, notificationOptions);
        });


        //10 min = 600000
        //1 min = 60000
        //5 sec = 5000
        setTimeout(function () { showUpdateDate(); }, 60000);
        function showUpdateDate() {
            $("#lastUpdateRow").toggleClass("d-none");
        }





    </script>


</main>