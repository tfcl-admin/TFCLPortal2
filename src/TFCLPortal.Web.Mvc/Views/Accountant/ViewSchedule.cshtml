@model TFCLPortal.Schedules.Dto.ScheduleListDto

@{
    Layout = null;
    int totalPrincipal = 0;
    int totalInterest = 0;
    int totalInstallment = 0;
    //CultureInfo provider = CultureInfo.InvariantCulture;

}
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" />
<link href="~/lib/font-awesome/css/font-awesome.css" rel="stylesheet" asp-append-version="true" />

<style>
    .tbl {
        /*border: 2px solid;*/
        font-size: 11px;
    }

        .tbl td {
            border: 1px solid;
            padding: 3px;
            text-transform: uppercase
        }

    tr {
        border-left: 2px solid;
        border-right: 2px solid;
    }

    .tbl th {
        border: 2px solid;
        padding: 4px;
        text-transform: uppercase
    }
    .container {
        background: linear-gradient(rgba(255,255,255,0.8), rgba(255,255,255,0.8)), url("/Theame/images/bg.png");
        background-repeat: no-repeat;
        background-position: center center;
    }
</style>
<div class="container">

    <div class="row">
        <div class="col-md-4 text-left">
            <img id="Imglogo" src="~/images/TFCLNoBg.png" width="100px">
            @*<img id="Imglogo" src="~/Theame/images/bg.png" width="100px">*@
        </div>
        <div class="col-md-4 text-center" style="padding-top:30px">
            <h3 style="text-transform:uppercase">Loan Schedule</h3>
        </div>
      
    </div>

    <div class="row" style="padding-top:30px;">
        <div class="col-md-12">
            <table border="1" width="100%" class="tbl" style="border: 2px solid">
                <tr>
                    <td>
                        <b>School/Business Name</b>
                    </td>
                    <td colspan="3">
                        @ViewBag.SchoolName
                    </td>
                </tr>
                <tr>
                    <td>
                        <b>Product Name</b>
                    </td>
                    <td>
                        @ViewBag.Product
                    </td>
                    <td>
                        <b>Applicant Name</b>
                    </td>
                    <td>
                        @ViewBag.ApplicantName
                    </td>
                </tr>
                <tr>
                    <td>
                        <b>Loan Amount</b>
                    </td>
                    <td>
                        @Model.LoanAmount
                    </td>
                    <td>
                        <b>Client ID</b>
                    </td>
                    <td>
                        @ViewBag.AppNo
                    </td>
                </tr>
                <tr>
                    <td>
                        <b>Tenure</b>
                    </td>
                    <td>
                        @Model.Tenure
                    </td>
                    <td>
                        <b>Loan Disbursement Date</b>
                    </td>
                    <td>
                        @ViewBag.DisbursmentDate
                    </td>
                </tr>
                <tr>
                    <td>
                        <b>APR</b>
                    </td>
                    <td>
                        @Model.Markup
                    </td>
                    <td>
                        <b>Current Status</b>
                    </td>
                    <td>
                        @ViewBag.ScreenStatus
                    </td>
                </tr>
            </table>
        </div>
    </div>
    <div class="row" style="padding-top:30px;padding-bottom:30px">
        <div class="col-md-12">
            <table border="0" width="100%" class="tbl">

                <tr>
                    <th style="text-align:center">Inst</th>
                    <th style="text-align:center">Due Date</th>
                    @if (Model.ScheduleType != "Standard")
                    {
                        <th style="text-align:center">Tranche</th>
                    }
                    <th style="text-align:center">Principal</th>
                    <th style="text-align:center">Int</th>
                    <th style="text-align:center">Installment</th>
                    <th style="text-align:center">Outstanding P.</th>
                    <th rowspan="@(Model.installmentList.Count+1)" style="border:none; border-top:1px solid white;"></th>
                    <th style="text-align:center">Paid Date</th>
                    <th style="text-align:center">Late Days (DPD)</th>
                    <th style="text-align:center">Amount Paid</th>
                    <th style="text-align:center">Excess/Short</th>
                    <th rowspan="@(Model.installmentList.Count+1)" style="border:none;"></th>
                    <th style="text-align:center">Payment Status</th>
                </tr>
                @{ int i = 0;}
                @{ int x = 0;}
                @foreach (var item in Model.installmentList)
                {
                    { i++; }
                    <tr style="@(i==Model.installmentList.Count ? "border-bottom: 2px solid ": "")">
                        <td style="text-align:center">
                            @item.InstNumber
                        </td>
                        <td style="text-align:center">
                            @(item.InstallmentDueDate == null || item.InstallmentDueDate == "--" ? "--" : string.Format("{0:dd MMM yyyy}", DateTime.ParseExact(item.InstallmentDueDate, "dd MMM yyyy",null)))

                        </td>
                        @if (Model.ScheduleType != "Standard")
                        {
                            <td style="text-align:right">
                                @item.AdditionalTranche
                            </td>
                        }

                        <td style="text-align:right">
                            @item.principal
                        </td>
                        <td style="text-align:right">
                            @item.markup
                        </td>
                        <td style="text-align:right">
                            @item.installmentAmount
                        </td>
                        <td style="text-align:right">
                            @item.OsPrincipal_Closing
                        </td>

                        <td style="text-align:center">
                            @(item.PaymentDate == null  ? "--" : string.Format("{0:dd MMM yyyy}", item.PaymentDate))
                        </td>
                        <td style="text-align:center">
                            @*@item.InstNumber*@
                            @if (item.PaymentDate != null && item.InstallmentDueDate != null && item.InstallmentDueDate != "" && item.InstallmentDueDate != "--")
                            {
                                <font>
                                    @{ int lateDays = (item.PaymentDate - DateTime.ParseExact(item.InstallmentDueDate, "dd MMM yyyy", null)).Value.Days;}
                                    @(lateDays<=0?"--":lateDays.ToString())
                                </font>
                            }
                            else
                            {
                                <font>--</font>
                            }
                        </td>

                        <td style="text-align:center">
                            @(item.PaidAmount == null ||item.PaidAmount=="" || item.PaidAmount == "0" ? "--" : string.Format("{0:#,##0}", Decimal.Parse((item.PaidAmount).Replace(",", ""))))
                        </td>
                        <td style="text-align:center">
                            @(item.ExcessShort == null ||item.ExcessShort == "" || item.ExcessShort == "0" ? "--" : string.Format("{0:##,###}", item.ExcessShort))
                        </td>


                        <td style="text-align:center">
                            @if (item.isPaid == null)
                            {
                                if (x != 1)
                                {
                                    x = 1;
                                    <i class="fa fa-times text-danger"></i>
                                }
                                else
                                {
                                    <font>--</font>
                                }
                            }
                            else if (item.isPaid == false)
                            {
                                if (x != 1)
                                {
                                    x = 1;
                                    <i class="fa fa-times text-danger"></i>
                                }
                                else
                                {
                                    <font>--</font>
                                }
                            }
                            else if (item.isPaid == true)
                            {
                                <i class="fa fa-check text-success"></i>
                            }
                        </td>



                    </tr>
                    @if (item.principal == "--" || item.principal == "" || item.principal == null)
                    {
                        totalPrincipal += 0;
                    }
                    else
                    {
                        totalPrincipal += int.Parse(item.principal.Replace(",", ""));
                    }

                    @if (item.markup == "--" || item.markup == "" || item.markup == null)
                    {
                        totalInterest += 0;
                    }
                    else
                    {
                        totalInterest += int.Parse(item.markup.Replace(",", ""));
                    }

                    @if (item.installmentAmount == "--" || item.installmentAmount == "" || item.installmentAmount == null)
                    {
                        totalInstallment += 0;
                    }
                    else
                    {
                        totalInstallment += int.Parse(item.installmentAmount.Replace(",", ""));
                    }

                    @*@{
                    totalPrincipal = totalPrincipal + (item.principal == "--" || item.principal == "" || item.principal == null ? 0 : int.Parse(item.principal.Replace(",", "")));
                    totalInterest = totalInterest + (item.markup == "--" || item.markup == "" || item.markup == null ? 0 : int.Parse(item.markup.Replace(",", "")));
                    totalInstallment = totalInstallment + (item.installmentAmount == "--" || item.installmentAmount == "" || item.installmentAmount == null ? 0 : int.Parse(item.installmentAmount.Replace(",", "")));
                }*@


                }

                <tr>
                    @if (Model.ScheduleType != "Standard")
                    {
                        <th style="text-align:center" colspan="3">Grand Total</th>

                    }
                    else
                    {
                        <th style="text-align:center" colspan="2">Grand Total</th>

                    }
                    <th style="text-align:right">@string.Format("{0:#,##0}", totalPrincipal)</th>
                    <th style="text-align:right">@string.Format("{0:#,##0}", totalInterest)</th>
                    <th style="text-align:right">@string.Format("{0:#,##0}", totalInstallment)</th>
                    <th style="text-align:right"></th>
                </tr>



            </table>
            <div class="col-md-12 text-right" style="padding-top: 40px;font-size: 12px;">Print Date : @ViewBag.PrintDate</div>
        </div>
    </div>

</div>
