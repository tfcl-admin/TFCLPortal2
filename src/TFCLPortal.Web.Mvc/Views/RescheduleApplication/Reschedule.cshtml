@{
    Layout = null;
}


<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" />
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" />

<style>
    .topTables td {
        padding-top: 3px;
        border: 1px solid;
        text-align: center;
        text-transform: uppercase;
    }

    .tblTopData td {
        border: 1px solid;
        padding: 3px;
        font-size: 13px;
        text-transform: uppercase;
    }

    .installments thead {
        font-size: 11px;
        text-transform: uppercase;
    }

    .installments tr {
        font-size: 11px
    }

    .Tranchinstallments thead {
        font-size: 11px;
        text-transform: uppercase;
    }

    .Tranchinstallments tr {
        font-size: 11px
    }

    .signatures {
        font-size: 11px;
        font-weight: bold;
        margin-top: 100px;
        border-top: 1px solid;
        text-transform: uppercase;
    }

    .pageloader {
        position: fixed;
        left: 0px;
        top: 0px;
        width: 100%;
        height: 100%;
        z-index: 9999;
        background: url('/Theame/images/loader.gif') 50% 50% no-repeat rgb(249, 249, 249);
        opacity: .8;
    }
</style>


<div class=" text-right border-bottom p-3  mb-3" id="topMenu">
    <div class="col-md-12">
        <a class="btn btn-outline-warning" onclick="window.location.reload();"><i class="fa fa-recycle"></i> Reset</a>
        <a class="btn btn-outline-primary" id="print"><i class="fa fa-print"></i> Print</a>
        <a class="btn btn-outline-success" id="save"><i class="fa fa-forward"></i> Send To BM</a>
    </div>
</div>
<div class="pageloader d-none"></div>

<div class="container ">

    <div class="row">
        <div class="col-md-3 text-right">
            <img id="Imglogo" src="~/Theame/images/bg.png" width="50px">
        </div>
        <div class="col-md-9" style="padding-top:30px">
            <h1>Taleem Finance Company Limited</h1>
        </div>
    </div>

    <div class="row" style="margin-top:50px">
        <div class="col-md-4 text-left">
            <table width="100%" class="topTables">
                <tr>
                    <td><h6><b>Client ID</b></h6></td>
                    <td style="background-color:lightyellow"><h6>@ViewBag.Application.ClientID</h6></td>
                </tr>
            </table>

        </div>
        <div class="col-md-4"></div>
        <div class="col-md-4 text-right">
            <table width="100%" class="topTables">
                <tr>
                    <td><h6><b>Schedule Type </b></h6></td>
                    <td style="background-color:lightyellow"><h6>@ViewBag.Input.ScheduleType </h6> </td>
                </tr>
            </table>
        </div>
    </div>

    <div class="row" style="margin-top:20px">
        <div class="col-md-6 text-left">
            <table width="100%" class="tblTopData">
                <tr>
                    <td width="40%"><b>Applicant Name</b></td>
                    <td style="background-color:lightyellow">@ViewBag.Application.ClientName</td>
                </tr>
                <tr>
                    <td><b>Client/School Name</b></td>
                    <td style="background-color:lightyellow">@ViewBag.Application.SchoolName</td>
                </tr>
                <tr>
                    <td><b>Product</b></td>
                    <td style="background-color:lightyellow">@ViewBag.Application.ProductTypeName</td>
                </tr>
                <tr>
                    <td><b>A/C Title</b></td>
                    <td id="txtAccountTitle" style="background-color:lightyellow">Taleem Finance Company</td">
                </tr>
                <tr>
                    <td><b>Repayment A/C No</b></td>
                    <td id="txtRepaymentACnumber" style="background-color:lightyellow">1087643581000566</td>
                </tr>
                <tr>
                    <td><b>Bank/Branch Name</b></td>
                    <td id="txtBankBranchName" style="background-color:lightyellow">MCB / Falcon Complex Br</td>
                </tr>
            </table>

        </div>
        <div class="col-md-6 text-right">
            <table width="100%" class="tblTopData">
                <tr>
                    <td width="40%"><b>Loan Amount</b></td>
                    <td style="background-color:lightyellow" id="txtLoanAmount">
                        @(ViewBag.Input.LoanAmount == null || ViewBag.Input.LoanAmount == ""  ? "--" : string.Format("{0:#,##0.##}", decimal.Parse(ViewBag.Input.LoanAmount)))
                        <a title="Edit Loan Amount" href="" id="LoanAmountChangeBtn" data-toggle="modal" data-target="#_editLoanAmount"><i class="fa fa-edit"></i></a>
                    </td>
                </tr>
                <tr>
                    <td><b>Tenure (Months)</b></td>
                    <td style="background-color:lightyellow" id="txtTenure">
                        @(ViewBag.Input.Tenure == null || ViewBag.Input.Tenure == ""  ? "--" : ViewBag.Input.Tenure)
                        <a title="Edit Tenure" href="" data-toggle="modal" id="TenureChangeBtn" data-target="#_editTenure"><i class="fa fa-edit"></i></a>
                    </td>
                </tr>
                <tr>
                    <td><b>Mark-up Rate</b></td>
                    <td style="background-color:lightyellow" id="txtMarkup">@(ViewBag.Input.Markup == null || ViewBag.Input.Markup == ""  ? "--" : ViewBag.Input.Markup)</td>
                </tr>
                <tr>
                    <td><b>Disbursement Date</b></td>
                    <td style="background-color:lightyellow" id="txtDisbursmentDate">
                        @(ViewBag.Input.DisbursmentDate == null ? "--" : string.Format("{0:dd MMM yyyy}", ViewBag.Input.DisbursmentDate))
                    </td>
                </tr>
                <tr>
                    <td><b>Grace Days</b></td>
                    <td style="background-color:lightyellow" id="txtGraceDays">@ViewBag.Input.GraceDays</td>
                </tr>
                <tr>
                    <td><b>Deferment (Months)</b></td>
                    <td style="background-color:lightyellow">
                        <span id="txtDeferment">@(ViewBag.Input.Deferment == null || ViewBag.Input.Deferment == "0"  ? "--" : ViewBag.Input.Deferment)</span>
                        @*<a title="Add Deferment" href="" data-toggle="modal" data-target="#_addDeferment"><i class="fa fa-plus-circle"></i></a>*@
                    </td>
                </tr>
            </table>
        </div>
    </div>

    <div class="row" style="margin-top:20px">
        <div class="col-md-6 text-left">
            <table width="100%" class="tblTopData">
                <tr>
                    <td width="40%"><b>Branch Name</b></td>
                    <td style="background-color:lightyellow">@ViewBag.Input.TFCL_Branch</td>
                </tr>
                <tr>
                    <td><b>Branch Manager Name</b></td>
                    <td style="background-color:lightyellow">@ViewBag.BMName</td>
                </tr>
                <tr>
                    <td><b>SDE Name</b></td>
                    <td style="background-color:lightyellow">@ViewBag.SDEName</td>
                </tr>


            </table>

        </div>
        <div class="col-md-6 text-right">
            <table width="100%" class="tblTopData">
                <tr>
                    <td width="40%"><b>IRR %</b></td>
                    <td style="background-color:lightyellow" id="txtIRR">@(ViewBag.Input.IRR == null || ViewBag.Input.IRR == ""  ? "--" : ViewBag.Input.IRR)</td>
                </tr>
                <tr>
                    <td><b>Installment</b></td>
                    <td style="background-color:lightyellow" id="installmentDiv">@(ViewBag.Input.Installment == null || ViewBag.Input.Installment == "--"  ? "--" : string.Format("{0:#,##0.##}", decimal.Parse(ViewBag.Input.Installment)))</td>
                </tr>
                <tr>
                    <td><b>Loan Start Date</b></td>
                    <td style="background-color:lightyellow" id="txtLoanStartDate">@(ViewBag.Input.LoanStartDate == null ? "--" : string.Format("{0:dd MMM yyyy}", ViewBag.Input.LoanStartDate))</td>

                </tr>
                <tr>
                    <td><b>Last Inst Date</b></td>
                    <td style="background-color:lightyellow" id="txtLastInstallmentDate">
                        @(ViewBag.Input.LastInstallmentDate == null ? "--" : string.Format("{0:dd MMM yyyy}", ViewBag.Input.LastInstallmentDate))
                    </td>
                </tr>
                <tr>
                    <td><b>Yearly Mark-up</b></td>
                    <td style="background-color:lightyellow" id="YearlyDiv">@(ViewBag.Input.YearlyMarkup == null || ViewBag.Input.YearlyMarkup == "--"  ? "--" : string.Format("{0:#,##0.##}", decimal.Parse(ViewBag.Input.YearlyMarkup)))</td>
                </tr>
                <tr>
                    <td><b>Per Day Mark-up</b></td>
                    <td style="background-color:lightyellow" id="DayDiv">@(ViewBag.Input.PerDayMarkup == null || ViewBag.Input.PerDayMarkup == "--"  ? "--" : string.Format("{0:#,##0.##}", decimal.Parse(ViewBag.Input.PerDayMarkup)))</td>
                </tr>
            </table>
        </div>
    </div>


    <div class="row" id="TranchesTbl" style="margin-top:20px">
        <div class="col-md-12">
            <div id="innerTranchesTbl"></div>
        </div>
    </div>

    <div class="row" style="margin-top:20px">
        <div class="col-md-12 text-right">
            <a href="" class="text-danger" data-toggle="modal" data-target="#_AddBaloonPayment"><i class="fa fa-plus-circle"></i> Add Baloon Payment</a>
            <a href="" class="text-success" data-toggle="modal" data-target="#_AddTopUpPayment"><i class="fa fa-plus-circle"></i> Add Top Up</a>
        </div>
    </div>

    <div class="row" style="margin-top:20px">
        <div class="col-md-12">
            <div id="installmentsTable"></div>
        </div>
    </div>

    <div class="row" style="margin-top:20px">
        <div class="col-md-12">
            <div id="SignaturesTable"></div>
        </div>
    </div>

</div>
<!--Deferment Modal -->
<div class="modal fade" id="_editLoanAmount" tabindex="-1" role="dialog" style="z-index: 1100;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Edit Loan Amount</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">

                <div class="row">

                    <div class="col-md-12">
                        <p class="detailHeading">Total Loan Amount</p>
                        <input id="totalLoanAmount" type="text" readonly="readonly" value="@(ViewBag.Input.LoanAmount == null || ViewBag.Input.LoanAmount == ""  ? "--" : string.Format("{0:#,##0.##}", decimal.Parse(ViewBag.Input.LoanAmount)))" class="form-control" />
                    </div>
                    <div class="col-md-12">
                        <p class="detailHeading">Outstanding Principal</p>
                        <input id="OutstandingPrincipalText" type="text" readonly="readonly" class="form-control" />
                    </div>
                    <div class="col-md-12">
                        <p class="detailHeading">New Outstanding Principal</p>
                        <input id="NewOutstandingPrincipalText" type="text" class="form-control" />
                    </div>

                </div>


            </div>
            <div class="modal-footer">
                <button id="applyAmountChange" type="button" class="btn btn-outline-success bg1 ef1">Apply</button>
                <button data-dismiss="modal" type="button" class="btn btn-outline-danger bg1 ef1">Cancel</button>
            </div>
        </div>
    </div>
</div>
<!-- Modal -->
<!--Deferment Modal -->
<div class="modal fade" id="_editTenure" tabindex="-1" role="dialog" style="z-index: 1100;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Edit Tenure</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">

                <div class="row">

                    <div class="col-md-12">
                        <p class="detailHeading">Total Tenure</p>
                        <input id="totalTenureText" type="text" readonly="readonly" value="@(ViewBag.Input.Tenure == null || ViewBag.Input.Tenure == ""  ? "--" : ViewBag.Input.Tenure)" class="form-control" />
                    </div>
                    <div class="col-md-12">
                        <p class="detailHeading">Last Paid Installment</p>
                        <input id="PaidInstallmentNoText" type="text" readonly="readonly" class="form-control" />
                    </div>
                    <div class="col-md-12">
                        <p class="detailHeading">Remaining Installments</p>
                        <input id="RemainingInstallmentsTexts" type="text" readonly="readonly" class="form-control" />
                    </div>
                    <div class="col-md-12">
                        <p class="detailHeading">New Remaing Installments</p>
                        <input id="NewRemainingInstallmentsText" type="text" class="form-control" />
                    </div>

                </div>


            </div>
            <div class="modal-footer">
                <button id="applyTenureChange" type="button" class="btn btn-outline-success bg1 ef1">Apply</button>
                <button data-dismiss="modal" type="button" class="btn btn-outline-danger bg1 ef1">Cancel</button>
            </div>
        </div>
    </div>
</div>
<!-- Modal -->
<!--Deferment Modal -->
<div class="modal fade" id="_AddBaloonPayment" tabindex="-1" role="dialog" style="z-index: 1100;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Add Baloon Payment</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">

                <div class="row">

                    <div class="col-md-12">

                        <div class=" row">

                            <div class="col-md-12">
                                <p class="detailHeading">Amount</p>
                                <input id="BaloonAmountText" type="number" class="form-control" />
                            </div>
                        </div>
                    </div>

                </div>


            </div>
            <div class="modal-footer">
                <button id="applyBaloonPayment" type="button" class="btn btn-outline-success bg1 ef1">Apply</button>
                <button data-dismiss="modal" type="button" class="btn btn-outline-danger bg1 ef1">Cancel</button>
            </div>
        </div>
    </div>
</div>
<!-- Modal -->
<!--Deferment Modal -->
<div class="modal fade" id="_AddTopUpPayment" tabindex="-1" role="dialog" style="z-index: 1100;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Add Top Up Payment</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">

                <div class="row">

                    <div class="col-md-12">

                        <div class=" row">

                            <div class="col-md-12">
                                <p class="detailHeading">Amount</p>
                                <input id="TopUpAmountText" type="number" class="form-control" />
                            </div>
                        </div>
                    </div>

                </div>


            </div>
            <div class="modal-footer">
                <button id="applyTopUpPayment" type="button" class="btn btn-outline-success bg1 ef1">Apply</button>
                <button data-dismiss="modal" type="button" class="btn btn-outline-danger bg1 ef1">Cancel</button>
            </div>
        </div>
    </div>
</div>
<!-- Modal -->

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>

<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js" crossorigin="anonymous"></script>
<script src="~/lib/abp-web-resources/Abp/Framework/scripts/abp.js" asp-append-version="true"></script>
<script src="~/lib/abp-web-resources/Abp/Framework/scripts/libs/abp.jquery.js" asp-append-version="true"></script>
<script src="~/lib/abp-web-resources/Abp/Framework/scripts/libs/abp.blockUI.js" asp-append-version="true"></script>
<script src="~/lib/abp-web-resources/Abp/Framework/scripts/libs/abp.spin.js" asp-append-version="true"></script>
<script src="~/vendor/formula/dist/formula.min.js" asp-append-version="true"></script>

<script>



    $(function () {


        var Signatories = @Html.Raw(Json.Serialize(ViewBag.Signatories));
        var Type = '@ViewBag.Input.ScheduleType';
        if (Type == 'Standard') {

        }
        else if (Type == 'Tranches') {
            $('#installmentDiv').html("--");
            $('#DayDiv').html("--");
            $('#YearlyDiv').html("--");
        }
        $(".pageloader").toggleClass("d-none");

        var installments = [];

        $.ajax({
            type: 'POST',
            datatype: "json",
            contenttype: 'application/json; charset=utf-8',
            url: '@Url.Content("~/Accountant/getInstallments")',
            data:{'ApplicationId':'@ViewBag.ApplicationId'},
            success: function (response) {
                $(".pageloader").toggleClass("d-none");
                installments = response.result;
                console.table(response.result);
                displayInstallmentsTable(installments);

                //reDisplayTable();

            },
            error: function (error) {
                console.log(error);
                $(".pageloader").toggleClass("d-none");

            }
        });



        function displayInstallmentsTable(data) {
            $(".pageloader").toggleClass("d-none");

            var content = "";
            content += "<table  class='table table-striped table-bordered installments' cellspacing='0' width='100 %'>";
            content += "<thead>";
            content += " <th style='text-align: center'>Inst #</th>";
            content += " <th style='text-align: center'>Bal Inst</th>";
            content += " <th style='text-align: center'>Installment Due Date</th>";
            content += " <th style='text-align: center'>O/S Principal - Op</th>";
            content += " <th style='text-align: center'>Additional Tranche</th>";
            content += " <th style='text-align: center'>O/S Principal - Opening</th>";
            content += " <th style='text-align: center'>Markup</th>";
            content += " <th style='text-align: center'>Principal</th>";
            content += " <th style='text-align: center'>Installment Amount</th>";
            content += " <th style='text-align: center'>O/S Principal - Closing</th>";
            content += " <th style='text-align: center'>Paid</th>";
            content += " <th style='text-align: center'>Payment Date</th>";
            content += "</thead>";
            content += "<tbody>";

            for (i = 0; i < data.length; i++) {

                if (data[i].isPaid == 1) {
                    content += '<tr  style="background-color:#F3F5F2">';

                }
                else {
                    content += '<tr>';
                }
                content += '<td style="text-align: center">' + data[i].instNumber + '</td>';
                content += '<td style="text-align: center">' + data[i].balInst + '</td>';
                content += '<td style="text-align: center">' + data[i].installmentDueDate + '</td>';
                content += '<td style="text-align: center">' + data[i].osPrincipal_op + '</td>';
                if (data[i].additionalTranche != "--") {
                    content += '<td style="text-align: center">' + data[i].additionalTranche + ' </td > ';
                    //content += '<td style="text-align: center">' + data[i].additionalTranche + '  <a title="Edit Tranches" class="ChangeTranche" hidden-value=' + data[i].additionalTranche + ' hidden-date="' + data[i].installmentDueDate+'"><i class="fa fa-edit"></i></a></td > ';
                }
                else {
                    content += '<td style="text-align: center">--</td>';
                }
                content += '<td style="text-align: center">' + data[i].osPrincipal_Opening + '</td>';
                content += '<td style="text-align: center">' + data[i].markup + '</td>';
                content += '<td style="text-align: center">' + data[i].principal + '</td>';
                content += '<td style="text-align: center">' + data[i].installmentAmount + '</td>';
                content += '<td style="text-align: center">' + data[i].osPrincipal_Closing + '</td>';
                content += '<td style="text-align: center">' + isPaidCheck(data[i].isPaid) + '</td>';
                if (isNullOrEmpty(data[i].paymentDate)!='--') {
                    content += '<td style="text-align: center">' + isNullOrEmpty((data[i].paymentDate).substr(0, 10)) + '</td>';
                } else {
                    content += '<td style="text-align: center">' + isNullOrEmpty((data[i].paymentDate)) + '</td>';
                }
                content += '</tr>';

            }
            content += "</tbody>";
            content += "</table>"

            $('#installmentsTable').html(content);
            $(".pageloader").toggleClass("d-none");


        }


        $(document).on('click', '.ChangeTranche', function (e) {

            $('#_editTranches').modal('show');
            var dateOfTranche = $(this).attr("hidden-date");
            var val = $(this).attr("hidden-value");
            $('#Amount').val(val.replaceAll(",", ""));
            $('#dot').val(dateOfTranche);

        });


        $("#applyTranches").click(function () {
            var val = $('#Amount').val();
            var dateOfTranche=$('#dot').val();

            if (val == "") {
                val = 0;
            }

            if (confirm("Are you sure you want to proceed?")) {
                updateInstallmentsApplyTranche(dateOfTranche,val);
            } else {
                alert('Cancelled');
            }

        });


        function updateInstallmentsApplyTranche(dateOfTranch, NewTranchValue) {
            //alert(dateOfTranch);
            //alert(NewTranchValue);
            $('#_editTranches').modal('hide');


            var indexOfInstallment = null;
            var DateOfInstallment = null;
            installments.forEach(function (item, index) {

                if (dateOfTranch == item.installmentDueDate) {
                    indexOfInstallment = index;
                    DateOfInstallment = dateOfTranch;
                }
            });

            //Update Tranch Row
            installments[indexOfInstallment].additionalTranche = numberWithCommas(NewTranchValue);
            displayInstallmentsTable(installments);
        }


        $(document).on('click', '#LoanAmountChangeBtn', function (e) {

            var Principal = installments.find(x => x.isPaid != true).osPrincipal_op;
            console.log('Opening Prinipal : '+Principal);
            $('#OutstandingPrincipalText').val(Principal);
        });
        $(document).on('click', '#TenureChangeBtn', function (e) {
            var LastInstallmentIndex = installments.filter(x => x.isPaid == true).length-1;
            var LastInstallment = installments[LastInstallmentIndex];
            $('#PaidInstallmentNoText').val(LastInstallment.instNumber);
            $('#RemainingInstallmentsTexts').val(LastInstallment.balInst);
            console.log(LastInstallment);
            //$('#OutstandingPrincipalText').val(Principal);
        });
        $(document).on('click', '#applyAmountChange', function (e) {
            var LastInstallmentIndex = installments.filter(x => x.isPaid == true).length - 1;
            var LastInstallmentP = installments[LastInstallmentIndex];
            var FirstInstallmentU = installments[LastInstallmentIndex + 1];

            var tenure = $('#NewRemainingInstallmentsText').val();

            if (tenure == "" || tenure == null) {
                tenure = LastInstallmentP.balInst;
            }

            var Amount = $('#NewOutstandingPrincipalText').val();

            if (Amount == "" || Amount == null) {
                Amount = FirstInstallmentU.osPrincipal_op.replaceAll(",", "");
            }


            reDisplayTable(tenure, Amount, LastInstallmentP, FirstInstallmentU);
            console.log("------------------------------------Apply Change Start------------------------------------");
            console.log("Tenure : " + tenure);
            console.log("Amount : " + Amount);
            console.log("LastInstallmentP : ");
            console.log(LastInstallmentP);
            console.log("FirstInstallmentU : ");
            console.log(FirstInstallmentU);
            console.log("------------------------------------Apply Change End------------------------------------");
            $('#_editLoanAmount').modal('hide');
        });


        $(document).on('click', '#applyTenureChange', function (e) {
            var LastInstallmentIndex = installments.filter(x => x.isPaid == true).length - 1;
            var LastInstallmentP = installments[LastInstallmentIndex];
            var FirstInstallmentU = installments[LastInstallmentIndex + 1];

            var tenure = $('#NewRemainingInstallmentsText').val();

            if (tenure == "" || tenure == null) {
                tenure = LastInstallmentP.balInst;
            }

            var Amount = $('#NewOutstandingPrincipalText').val();

            if (Amount == "" || Amount == null) {
                Amount = FirstInstallmentU.osPrincipal_op.replaceAll(",", "");
            }


            reDisplayTable(tenure, Amount, LastInstallmentP, FirstInstallmentU);
            console.log("------------------------------------Apply Change Start------------------------------------");
            console.log("Tenure : " + tenure);
            console.log("Amount : " + Amount);
            console.log("LastInstallmentP : ");
            console.log(LastInstallmentP);
            console.log("FirstInstallmentU : ");
            console.log(FirstInstallmentU);
            console.log("------------------------------------Apply Change End------------------------------------");
            $('#_editTenure').modal('hide');
        });


        $(document).on('click', '#applyBaloonPayment', function (e) {
            var LastInstallmentIndex = installments.filter(x => x.isPaid == true).length - 1;
            var LastInstallmentP = installments[LastInstallmentIndex];
            var FirstInstallmentU = installments[LastInstallmentIndex + 1];
            if (Number($('#BaloonAmountText').val()) < Number(FirstInstallmentU.osPrincipal_op.replaceAll(",", ""))) {
                var tenure = $('#NewRemainingInstallmentsText').val();

                if (tenure == "" || tenure == null) {
                    tenure = LastInstallmentP.balInst;
                }

                var Amount = Number(FirstInstallmentU.osPrincipal_op.replaceAll(",", "")) - Number($('#BaloonAmountText').val());

                if (Amount == "" || Amount == null) {
                    Amount = FirstInstallmentU.osPrincipal_op.replaceAll(",", "");
                }


                reDisplayTable(tenure, Amount, LastInstallmentP, FirstInstallmentU);
                console.log("------------------------------------Apply Change Start------------------------------------");
                console.log("Tenure : " + tenure);
                console.log("Amount : " + Amount);
                console.log("LastInstallmentP : ");
                console.log(LastInstallmentP);
                console.log("FirstInstallmentU : ");
                console.log(FirstInstallmentU);
                console.log("------------------------------------Apply Change End------------------------------------");
                $('#_AddBaloonPayment').modal('hide');

            }
            else {
                alert('Baloon Payment can not be more than or equal to current outstanding amount : ' + FirstInstallmentU.osPrincipal_op);
            }
        });

        $(document).on('click', '#applyTopUpPayment', function (e) {

            var LastInstallmentIndex = installments.filter(x => x.isPaid == true).length - 1;
            var LastInstallmentP = installments[LastInstallmentIndex];
            var FirstInstallmentU = installments[LastInstallmentIndex + 1];

                var tenure = $('#NewRemainingInstallmentsText').val();

                if (tenure == "" || tenure == null) {
                    tenure = LastInstallmentP.balInst;
                }

                var Amount = Number(FirstInstallmentU.osPrincipal_op.replaceAll(",", "")) + Number($('#TopUpAmountText').val());

                if (Amount == "" || Amount == null) {
                    Amount = FirstInstallmentU.osPrincipal_op.replaceAll(",", "");
                }


                reDisplayTable(tenure, Amount, LastInstallmentP, FirstInstallmentU);
                console.log("------------------------------------Apply Change Start------------------------------------");
                console.log("Tenure : " + tenure);
                console.log("Amount : " + Amount);
                console.log("LastInstallmentP : ");
                console.log(LastInstallmentP);
                console.log("FirstInstallmentU : ");
                console.log(FirstInstallmentU);
                console.log("------------------------------------Apply Change End------------------------------------");
                $('#_AddTopUpPayment').modal('hide');

        });


        function reDisplayTable(Tenure,LoanAmountPar,LastPaidInstallment,FirstUnpaidInstallment) {

            var Tenure = Number(Tenure);
            var LoanAmount = Number(LoanAmountPar);
            var LoanStartDate = new Date('@ViewBag.Input.LoanStartDate');
            var Irr = parseFloat('@ViewBag.Input.IRR') / 100;
            var Markup = parseFloat('@ViewBag.Input.Markup')/100;
            var IrrFull = parseFloat('@ViewBag.IRR_full') / 100;


            if (Type == 'Standard') {
                var counter = 0;
                data = installments;

                var content = "";
                content += "<table  class='table table-striped table-bordered installments' cellspacing='0' width='100 %'>";
                content += "<thead>";
                content += " <th style='text-align: center'>Inst #</th>";
                content += " <th style='text-align: center'>Bal Inst</th>";
                content += " <th style='text-align: center'>Installment Due Date</th>";
                content += " <th style='text-align: center'>O/S Principal - Op</th>";
                content += " <th style='text-align: center'>Additional Tranche</th>";
                content += " <th style='text-align: center'>O/S Principal - Opening</th>";
                content += " <th style='text-align: center'>Markup</th>";
                content += " <th style='text-align: center'>Principal</th>";
                content += " <th style='text-align: center'>Installment Amount</th>";
                content += " <th style='text-align: center'>O/S Principal - Closing</th>";
                content += " <th style='text-align: center'>Paid</th>";
                content += " <th style='text-align: center'>Payment Date</th>";
                content += "</thead>";
                content += "<tbody>";

                var isGraceDaysExist = false;
                for (i = 0; i < data.filter(x => x.isPaid == true).length; i++) {

                    if (data[i].instNumber != 'G*') {
                        counter++;
                    }
                    else {
                        isGraceDaysExist = true;
                    }


                    if (data[i].isPaid == 1) {
                        content += '<tr  style="background-color:lightgray">';

                    }
                    else {
                        content += '<tr>';
                    }
                    content += '<td style="text-align: center">' + data[i].instNumber + '</td>';
                    content += '<td style="text-align: center">' + data[i].balInst + '</td>';
                    content += '<td style="text-align: center">' + data[i].installmentDueDate + '</td>';
                    content += '<td style="text-align: center">' + data[i].osPrincipal_op + '</td>';
                    if (data[i].additionalTranche != "--") {
                        content += '<td style="text-align: center">' + data[i].additionalTranche + ' </td > ';
                        //content += '<td style="text-align: center">' + data[i].additionalTranche + '  <a title="Edit Tranches" class="ChangeTranche" hidden-value=' + data[i].additionalTranche + ' hidden-date="' + data[i].installmentDueDate+'"><i class="fa fa-edit"></i></a></td > ';
                    }
                    else {
                        content += '<td style="text-align: center">--</td>';
                    }
                    content += '<td style="text-align: center">' + data[i].osPrincipal_Opening + '</td>';
                    content += '<td style="text-align: center">' + data[i].markup + '</td>';
                    content += '<td style="text-align: center">' + data[i].principal + '</td>';
                    content += '<td style="text-align: center">' + data[i].installmentAmount + '</td>';
                    content += '<td style="text-align: center">' + data[i].osPrincipal_Closing + '</td>';
                    content += '<td style="text-align: center">' + isPaidCheck(data[i].isPaid) + '</td>';
                    if (isNullOrEmpty(data[i].paymentDate) != '--') {
                        content += '<td style="text-align: center">' + isNullOrEmpty((data[i].paymentDate).substr(0, 10)) + '</td>';
                    } else {
                        content += '<td style="text-align: center">' + isNullOrEmpty((data[i].paymentDate)) + '</td>';
                    }
                    content += '</tr>';

                }

                Irr = formulajs.RATE(Tenure, (1 + ((1 * Markup) / 12 * Tenure)) / Tenure, -1, 0, 0)*12;
                //Irr = formulajs.RATE(Tenure, (1 + ((Markup / 12 * Tenure) / Tenure)), -1, 0, 0);
                //alert(Irr);
                //console.log('Markup : ' + Markup);
                //console.log('Tenure : ' + Tenure);
                //console.log('(1 + ((1 * ' + Markup + ') / 12 * ' + Tenure + ')) / ' + Tenure);


                var osPrincipalAmount = LoanAmount;
                var additionalTranch = Number(LoanAmount) - Number(FirstUnpaidInstallment.osPrincipal_op.replaceAll(",", ""));

                var emi = pmt(Irr / 12, Tenure, osPrincipalAmount, 0, 0);


                if (isGraceDaysExist==true) {
                    var startingIndex = Number(data[counter+1].instNumber);
                }
                else {
                    var startingIndex = Number(data[counter].instNumber);
                }
                var startDate = Number(moment(LoanStartDate).add(counter,'M'));
                console.log(data[counter].installmentDueDate);

                for (i = counter, counter = 0, j = (Tenure - 1); counter < Tenure; i++, counter++, j--) {

                    content += '<tr  style="background-color: #FFFFE0">';
                    content += '<td style="text-align: center">' + (startingIndex++) + '</td>';
                    content += '<td style="text-align: center">' + j + '</td>';
                    content += '<td style="text-align: center">' + getInstallmentDate(startDate) + '</td>';

                    if (counter == 0) {
                        content += '<td style="text-align: center">' + numberWithCommas(FirstUnpaidInstallment.osPrincipal_op.replaceAll(",", "")) + '</td>';
                    }
                    else {
                        content += '<td style="text-align: center">' + numberWithCommas(osPrincipalAmount) + '</td>';
                    }

                    //content += '<td style="text-align: center">' + data[i].osPrincipal_op + '</td>';
                    if (additionalTranch != 0) {
                        content += '<td style="text-align: center">' + numberWithCommas(additionalTranch) + ' </td > ';
                        additionalTranch = 0;
                    }

                    else {
                        content += '<td style="text-align: center">--</td>';
                    }
                    content += '<td style="text-align: center">' + numberWithCommas(osPrincipalAmount) + '</td>';

                    var resGetMarkup = getMarkup(osPrincipalAmount, Irr*100);
                    content += '<td style="text-align: center">' + numberWithCommas(resGetMarkup) + '</td>';

                    var principal = emi - resGetMarkup;
                    content += '<td style="text-align: center">' + numberWithCommas(principal) + '</td>';


                    //content += '<td style="text-align: center">' + data[i].markup + '</td>';
                    content += '<td style="text-align: center">' + numberWithCommas(emi) + '</td>';

                    var osPrincipalClosing = (osPrincipalAmount - principal);
                    if (j == 0 && osPrincipalClosing <= 10) {
                        content += '<td style="text-align: center">' + 0 + '</td>';
                    }
                    else {
                        content += '<td style="text-align: center">' + numberWithCommas(osPrincipalClosing) + '</td>';
                    }

                    content += '<td style="text-align: center">' + '<i class="fa fa-times" style="color:red"></i>' + '</td>';
                    content += '<td style="text-align: center">' + '--' + '</td>';
                    //if (isNullOrEmpty(data[i].paymentDate) != '--') {
                    //    content += '<td style="text-align: center">' + isNullOrEmpty((data[i].paymentDate).substr(0, 10)) + '</td>';
                    //} else {
                    //    content += '<td style="text-align: center">' + isNullOrEmpty((data[i].paymentDate)) + '</td>';
                    //}
                    content += '</tr>';

                    osPrincipalAmount = osPrincipalClosing;
                    $('#txtLastInstallmentDate').text(getInstallmentDate(startDate));
                    $('#installmentDiv').text(numberWithCommas(emi));
                    $('#txtIRR').text((Irr * 100).toFixed(2));
                    startDate = Number(moment(startDate).add(1, 'M'));
                }

                content += "</tbody>";
                content += "</table>"


                $('#installmentsTable').html(content);
            }

        }

























        if (Signatories.length > 0) {
            var signHtml = "<div class='row text-center'>";


            Signatories.forEach(function (item, index) {
                if (Signatories.length <= 2) {
                    signHtml += "<div class='col-md-6'>";
                }
                else {
                    signHtml += "<div class='col-md-4'>";
                }
                signHtml += "<p class='signatures'>" + item.name + " " + item.detail + "</p>";
                signHtml += "</div>";
            });

            signHtml += "</div>";
            $('#SignaturesTable').append(signHtml);
        }


        function numberWithCommas(x) {
            x = Math.round(x);
            return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        }
        function removeNaN(a) {
            return a = a || 0;
        }
        function isNullOrEmpty(str) {
            if (str) {
                return str;
            }
            else {
                return "--";
            }
        }

        function isPaidCheck(str){
            if (str == null) {
                return '<i class="fa fa-times" style="color:red"></i>';
            }
            else if (str == 1 || str == true) {
                return '<i class="fa fa-check" style="color:green"></i>';

            }
            else if (str == 0 || str == false) {
                return '<i class="fa fa-times" style="color:red"></i>';
            }
        }
        function getInstallmentDate(loanStart) {

            var d = moment(loanStart).add(1, 'M');
            return moment(d).format('DD MMM YYYY');

        }
        function formatDate(loanStart) {

            return moment(loanStart).format('DD MMM YYYY');

        }
        function getMarkup(pa, irr) {
            console.log(pa + ' : ' + irr);
            return ((pa * irr) / 12) / 100;
        }

        function getTranch(LoanStartDate) {

            var tranchAmount = "--";

            tranches.forEach(function (item) {
                var formattedDate = moment(item.startDate).format('DD MMM YYYY');
                if (formattedDate == LoanStartDate) {
                    tranchAmount = item;
                }
            });

            return tranchAmount;
        }
        function getTranchAmount(LoanStartDate) {

            var tranchAmount = "--";

            tranches.forEach(function (item) {
                var formattedDate = moment(item.startDate).format('DD MMM YYYY');
                if (formattedDate == LoanStartDate) {
                    tranchAmount = item.amount;
                }
            });

            return  tranchAmount;
        }

        function pmt(monthlyRate, monthlyPayments, presentValue, residualValue, advancedPayments) {
            var t1 = 1 + monthlyRate;
            var t2 = Math.pow(t1, monthlyPayments);
            var t3 = Math.pow(t1, (monthlyPayments - advancedPayments));
            var t4 = (presentValue - (residualValue / t2)) / (((1 - (1 / (t3))) / monthlyRate) + advancedPayments);
            return t4;
        }

        function getInstallment(tranch, osPrincipalAmount) {

            var installment = pmt(tranch.irr / 12 / 100, tranch.tranchTenure, osPrincipalAmount, 0, 0);

            return Math.round(installment);
        }




        //function getInstallment(irr, osPrincipalAmount) {

        //    var installment = pmt(irr / 12 / 100, Tenure, osPrincipalAmount, 0, 0);

        //    return Math.round(installment);
        //}

        //$("#print").click(function () {
        //    $(".container").print();
        //});

        $("#print").click(function () {
            //Hide all other elements other than printarea.
            $("#topMenu").toggleClass("d-none");
            $(".container").show();
            window.print();
            $("#topMenu").toggleClass("d-none");

        });

        $("#save").click(function () {

            $(".pageloader").toggleClass("d-none");


            var ScheduleInstallments = [];
            var stype = '@ViewBag.Input.ScheduleType';

            var tbl = $('table.installments tr').get().map(function (row) {
                return $(row).find('td').get().map(function (cell) {
                    return $(cell).html();
                });
            });



                //tbl.forEach(function (item, index) {
                //    if (index != 0) {

                //        var pdate;
                //        var ip;
                //        console.log(item[10]);
                //        if (item[10] == '<i class="fa fa-times" style="color:red"></i>') {
                //            ip = false;
                //        }
                //        else if (item[10] == '<i class="fa fa-check" style="color:green"></i>') {
                //            ip = true;
                //        }

                //        if (item[11] == '--') {
                //            pdate = null;
                //        }
                //        else {
                //            pdate = item[11];
                //        }

                //        var list = {
                //            'InstNumber': item[0],
                //            'BalInst': item[1],
                //            'InstallmentDueDate': item[2],
                //            'OsPrincipal_op': item[3],
                //            'AdditionalTranche': '--',
                //            'OsPrincipal_Opening': '--',
                //            'markup': item[6],
                //            'principal': item[7],
                //            'installmentAmount': item[8],
                //            'OsPrincipal_Closing': item[9],
                //            'isPaid': ip,
                //            'PaymentDate': pdate
                //        };

                //        ScheduleInstallments.push(list);
                //    }
                //});

            console.table(tbl);

                tbl.forEach(function (item, index) {
                    if (index != 0) {

                        var tranchValSplit = item[4].split(" ");

                        var pdate;
                        var ip;
                        if (item[10] == '<i class="fa fa-times" style="color:red"></i>') {
                            ip = false;
                        }
                        else if (item[10] == '<i class="fa fa-check" style="color:green"></i>') {
                            ip = true;
                        }

                        if (item[11] == '--') {
                            pdate = null
                        }
                        else {
                            pdate = item[11];
                        }

                        var list = {
                            'InstNumber': item[0],
                            'BalInst': item[1],
                            'InstallmentDueDate': item[2],
                            'OsPrincipal_op': item[3],
                            'AdditionalTranche': tranchValSplit[0],
                            'OsPrincipal_Opening': item[5],
                            'markup': item[6],
                            'principal': item[7],
                            'installmentAmount': item[8],
                            'OsPrincipal_Closing': item[9],
                            'isPaid': ip,
                            'PaymentDate': pdate
                        };

                        ScheduleInstallments.push(list);
                    }
                });


             var dataToSend = {
                'ApplicationId':'@ViewBag.ApplicationId',
                'ClientId':'@ViewBag.Application.ClientID',
                'ScheduleType':'@ViewBag.Input.ScheduleType',
                'LoanAmount': ($("#txtLoanAmount").text()).trim(),
                 'Tenure': ($("#txtTenure").text()).trim(),
                'Markup': $("#txtMarkup").text(),
                 'DisbursmentDate': $("#txtDisbursmentDate").text().trim(),
                'GraceDays': $("#txtGraceDays").text(),
                'Deferment': $("#txtDeferment").text(),
                'AccountTitle': $("#txtAccountTitle").text(),
                'RepaymentACnumber': $("#txtRepaymentACnumber").text(),
                'BankBranchName': $("#txtBankBranchName").text(),
                'TFCL_Branch': '@ViewBag.Input.TFCL_Branch',
                'BranchManager':'@ViewBag.BMName',
                'SDE': '@ViewBag.SDEName',
                'DeffermentStartDate': $("#txtDeffermentStartDate").text().trim(),
                'DeffermentEndDate': $("#txtDeffermentEndDate").text().trim(),
                'IRR': $("#txtIRR").text(),
                'Installment': $("#installmentDiv").text(),
                 'LoanStartDate': $("#txtLoanStartDate").text().trim(),
                 'LastInstallmentDate': $("#txtLastInstallmentDate").text().trim(),
                'YearlyMarkup': $("#YearlyDiv").text(),
                'PerDayMarkup': $("#DayDiv").text(),
                'UpdationReason': 'Reschedule',
                'installmentList': ScheduleInstallments
            };



            $.ajax({
                type: 'POST',
                datatype: "json",
                contenttype: 'application/json; charset=utf-8',
                url: '@Url.Content("~/Accountant/SaveScheduleTemp")',
                data: dataToSend,
                  success: function (response) {
                      alert(response.result);
                      console.log(response);
                      $(".pageloader").toggleClass("d-none");

                  },
                  error: function (error) {
                      alert("Error : " + error);
                      console.log(error);
                      $(".pageloader").toggleClass("d-none");

                  }
                });


            //console.log(dataToSend);
            //$(".pageloader").toggleClass("d-none");



        });

    });


</script>